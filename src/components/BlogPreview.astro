---
// Blog preview section with category filters
const categories = ['All', 'Environmental Science', 'Marine Biology', 'Diving', 'Conservation', 'Scouting'];

const blogPosts = [
  {
    id: 1,
    title: 'The True Disparities of Light Pollution',
    excerpt: 'The silent crisis of light pollution has illuminated my interest in environmental science. From childhood night walks to discovering the impact on human health and wildlife...',
    category: 'Environmental Science',
    date: '2025-04-02',
    readTime: '6 min read',
    image: 'https://darksky.org/app/uploads/2020/03/light-pollution-sea-turtles-web-824x549-1.jpg',
    tags: ['light-pollution', 'environmental-science', 'wildlife-conservation']
  },
  {
    id: 2,
    title: 'Finding Light After Dark',
    excerpt: 'My first night dive terrified me, but discovering bioluminescence in the dark waters transformed my fear into a lifelong passion for the ocean...',
    category: 'Diving',
    date: '2024-01-10',
    readTime: '7 min read',
    image: '/night-diving-light.jpg',
    tags: ['night-diving', 'bioluminescence', 'personal-story']
  },
  {
    id: 3,
    title: 'A Day in the Life at Camp Emerald Bay - Advanced Open Water Diving Certification at 14',
    excerpt: 'My first day at Camp Emerald Bay was filled with anticipation, underwater navigation, and discovering the alien-like kelp forests beneath the surface...',
    category: 'Diving',
    date: '2024-08-15',
    readTime: '8 min read',
    image: '/emerald-bay-diving.jpg',
    tags: ['camp-emerald-bay', 'diving-certification', 'advanced-open-water', 'personal-story']
  }
];
---

<section class="py-16 bg-slate-50" id="blog">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl sm:text-4xl font-bold text-slate-800 mb-4">
        Recent Discoveries
      </h2>
      <p class="text-lg text-slate-600 max-w-2xl mx-auto">
        Sharing insights from underwater expeditions, research projects, and conservation efforts
      </p>
    </div>

    <!-- Category Filters -->
    <div class="flex flex-wrap justify-center gap-2 mb-12">
      {categories.map((category) => (
        <button 
          class={`category-filter px-4 py-2 rounded-full text-sm font-medium transition-colors duration-200 ${
            category === 'All' 
              ? 'bg-ocean-600 text-white' 
              : 'bg-white text-slate-600 hover:bg-ocean-50 hover:text-ocean-600'
          } border border-slate-200 hover:border-ocean-200`}
          data-category={category.toLowerCase().replace(' ', '-')}
        >
          {category}
        </button>
      ))}
    </div>

    <!-- Blog Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {blogPosts.map((post) => (
        <article 
          class="blog-card card group animate-slide-up"
          data-category={post.category.toLowerCase().replace(' ', '-')}
        >
          <div class="relative overflow-hidden rounded-t-xl">
            <img 
              src={post.image}
              alt={post.title}
              class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300 ease-out"
              loading="lazy"
              width="400"
              height="192"
            />
            <div class="absolute top-3 left-3">
              <span class="bg-ocean-600 text-white px-2 py-1 rounded-full text-xs font-medium">
                {post.category}
              </span>
            </div>
          </div>
          
          <div class="p-6">
            <div class="flex items-center text-sm text-slate-500 mb-3">
              <time datetime={post.date}>
                {new Date(post.date).toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </time>
              <span class="mx-2">â€¢</span>
              <span>{post.readTime}</span>
            </div>
            
            <h3 class="font-bold text-xl text-slate-800 mb-3 line-clamp-2 group-hover:text-ocean-600 transition-colors">
              <a href={`/blog/${post.id}`} class="hover:underline">
                {post.title}
              </a>
            </h3>
            
            <p class="blog-content text-slate-600 mb-4 line-clamp-3">
              {post.excerpt}
            </p>
            
            <div class="flex flex-wrap gap-2 mb-4">
              {post.tags.map((tag) => (
                <span class="text-xs bg-slate-100 text-slate-600 px-2 py-1 rounded-md">
                  #{tag}
                </span>
              ))}
            </div>
            
            <a 
              href={`/blog/${post.id}`}
              class="inline-flex items-center text-ocean-600 hover:text-ocean-700 font-medium text-sm transition-colors"
            >
              Read More
              <svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
              </svg>
            </a>
          </div>
        </article>
      ))}
    </div>

    <!-- View All Posts Button -->
    <div class="text-center">
      <a href="/blog" class="btn-primary">
        View All Posts
      </a>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.category-filter');
    const blogCards = document.querySelectorAll('.blog-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const category = this.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-ocean-600', 'text-white');
          btn.classList.add('bg-white', 'text-slate-600');
        });
        this.classList.remove('bg-white', 'text-slate-600');
        this.classList.add('bg-ocean-600', 'text-white');
        
        // Filter blog cards
        blogCards.forEach((card, index) => {
          const cardCategory = card.getAttribute('data-category');
          const shouldShow = category === 'all' || cardCategory === category;
          
          if (shouldShow) {
            card.style.display = 'block';
            // Stagger animation
            setTimeout(() => {
              card.classList.add('animate-slide-up');
            }, index * 100);
          } else {
            card.style.display = 'none';
            card.classList.remove('animate-slide-up');
          }
        });
      });
    });
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>