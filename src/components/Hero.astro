---
// Hero carousel component with diving and scouting photography
const heroImages = [
  {
    src: '/hero-underwater-shark.jpg',
    alt: 'Underwater encounter with marine life during diving expedition',
    title: 'Underwater Expeditions',
    subtitle: 'Documenting marine life and exploring ocean depths'
  },
  {
    src: '/hero-scouting-ranch.jpg',
    alt: 'Scouting group at Circle X Ranch during outdoor leadership program',
    title: 'Scouting Leadership',
    subtitle: 'Environmental education and outdoor adventure programs'
  },
  {
    src: '/hero-dive-boat.jpg',
    alt: 'Dive boat expedition with research team',
    title: 'Research Expeditions',
    subtitle: 'Scientific diving and marine biology fieldwork'
  }
];
---

<section class="relative h-screen flex items-center justify-center overflow-hidden">
  <!-- Background Carousel -->
  <div class="absolute inset-0">
    {heroImages.map((image, index) => (
      <div 
        class={`hero-slide absolute inset-0 transition-opacity duration-1000 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
        data-slide={index}
      >
        <img 
          src={image.src}
          alt={image.alt}
          class="w-full h-full object-cover"
          loading={index === 0 ? 'eager' : 'lazy'}
        />
        <div class="absolute inset-0 bg-gradient-to-b from-black/30 via-black/20 to-black/50"></div>
      </div>
    ))}
  </div>

  <!-- Content Overlay -->
  <div class="relative z-10 text-center text-white px-4 max-w-4xl mx-auto">
    <div class="hero-content animate-fade-in">
      <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold mb-6 leading-tight">
        <span class="hero-title block">Underwater Expeditions</span>
      </h1>
      <p class="hero-subtitle text-xl sm:text-2xl mb-8 max-w-2xl mx-auto font-light">
        Documenting marine life and exploring ocean depths
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <a href="/#blog" class="btn-primary text-lg px-8 py-4">
          View My Work
        </a>
        <a href="/#intro" class="btn-secondary bg-white/10 border-white text-white hover:bg-white/20 text-lg px-8 py-4">
          About Me
        </a>
      </div>
    </div>
  </div>

  <!-- Carousel Controls -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20">
    <div class="flex space-x-3">
      {heroImages.map((_, index) => (
        <button 
          class={`carousel-dot w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-white scale-125' : 'bg-white/50 hover:bg-white/75'}`}
          data-slide={index}
          aria-label={`Go to slide ${index + 1}`}
        ></button>
      ))}
    </div>
  </div>

  <!-- Navigation Arrows -->
  <button class="absolute left-4 top-1/2 transform -translate-y-1/2 z-20 carousel-prev p-3 rounded-full bg-white/20 text-white hover:bg-white/30 transition-colors no-print">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>
  <button class="absolute right-4 top-1/2 transform -translate-y-1/2 z-20 carousel-next p-3 rounded-full bg-white/20 text-white hover:bg-white/30 transition-colors no-print">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
    </svg>
  </button>

  <!-- Scroll Indicator -->
  <div class="absolute bottom-20 left-1/2 transform -translate-x-1/2 z-20 text-white animate-bounce no-print">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const slides = document.querySelectorAll('.hero-slide');
    const dots = document.querySelectorAll('.carousel-dot');
    const title = document.querySelector('.hero-title');
    const subtitle = document.querySelector('.hero-subtitle');
    const prevBtn = document.querySelector('.carousel-prev');
    const nextBtn = document.querySelector('.carousel-next');
    
    let currentSlide = 0;
    const slideCount = slides.length;
    
    const slideData = [
      {
        title: 'Underwater Expeditions',
        subtitle: 'Documenting marine life and exploring ocean depths'
      },
      {
        title: 'Scouting Leadership',
        subtitle: 'Environmental education and outdoor adventure programs'
      },
      {
        title: 'Research Expeditions',
        subtitle: 'Scientific diving and marine biology fieldwork'
      }
    ];
    
    function updateSlide(index: number) {
      // Update slides
      slides.forEach((slide, i) => {
        slide.classList.toggle('opacity-100', i === index);
        slide.classList.toggle('opacity-0', i !== index);
      });
      
      // Update dots
      dots.forEach((dot, i) => {
        dot.classList.toggle('bg-white', i === index);
        dot.classList.toggle('scale-125', i === index);
        dot.classList.toggle('bg-white/50', i !== index);
      });
      
      // Update content with animation
      if (title && subtitle) {
        title.style.opacity = '0';
        subtitle.style.opacity = '0';
        
        setTimeout(() => {
          title.textContent = slideData[index].title;
          subtitle.textContent = slideData[index].subtitle;
          title.style.opacity = '1';
          subtitle.style.opacity = '1';
        }, 300);
      }
      
      currentSlide = index;
    }
    
    function nextSlide() {
      const next = (currentSlide + 1) % slideCount;
      updateSlide(next);
    }
    
    function prevSlide() {
      const prev = (currentSlide - 1 + slideCount) % slideCount;
      updateSlide(prev);
    }
    
    // Dot navigation
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => updateSlide(index));
    });
    
    // Arrow navigation
    prevBtn?.addEventListener('click', prevSlide);
    nextBtn?.addEventListener('click', nextSlide);
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') prevSlide();
      if (e.key === 'ArrowRight') nextSlide();
    });
    
    // Auto-advance slides (pauses on hover)
    let autoAdvance = setInterval(nextSlide, 5000);
    
    const heroSection = document.querySelector('section');
    heroSection?.addEventListener('mouseenter', () => clearInterval(autoAdvance));
    heroSection?.addEventListener('mouseleave', () => {
      autoAdvance = setInterval(nextSlide, 5000);
    });
    
    // Pause on focus for accessibility
    document.addEventListener('focusin', (e) => {
      if (heroSection?.contains(e.target as Node)) {
        clearInterval(autoAdvance);
      }
    });
    
    document.addEventListener('focusout', (e) => {
      if (!heroSection?.contains(e.relatedTarget as Node)) {
        autoAdvance = setInterval(nextSlide, 5000);
      }
    });
  });
</script>

<style>
  .hero-title, .hero-subtitle {
    transition: opacity 0.3s ease-in-out;
  }
</style>